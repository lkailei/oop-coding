(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{429:function(t,a,s){"use strict";s.r(a);var n=s(31),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"spring-cloud-stream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud-stream"}},[t._v("#")]),t._v(" Spring Cloud Stream")]),t._v(" "),s("h2",{attrs:{id:"基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),s("p",[t._v("在实际的开发过程中，服务与服务之间经常会使用到消息中间件，用于解决应用解耦 ，异步处理，流量削峰等问题实现高性能，高可用，最终一致性的架构。")]),t._v(" "),s("p",[t._v("Spring Cloud Stream是一个用来为微服务应用构建消息驱动能力的框架。它可以基于Spring Boot来创建独立的、可用于生产的Spring应用程序。它通过使用Spring Integration来连接消息代理中间件以实现消息事件驱动的微服务应用。使用Stream可以降低中间件与我们系统之间的 耦合性，不如我们可以让rabbitMq切换为Kafka,可以不用修改代码。只需要修改一些配置即可。")]),t._v(" "),s("ul",[s("li",[t._v("独立地构建、测试和部署以数据为中心的应用程序")]),t._v(" "),s("li",[t._v("应用现代微服务体系结构模式，包括通过消息传递进行组合")]),t._v(" "),s("li",[t._v("使用以事件为中心的思想来分离应用程序职责。事件可以表示在时间上已经发生的事情，下游消费者应用程序可以对此作出反应，而不必知道事件的起源或生产者的身份。")]),t._v(" "),s("li",[t._v("将业务逻辑移植到消息代理上(比如 RabbitMQ、 Apache Kafka、 Amazon kinesis)。")]),t._v(" "),s("li",[t._v("依赖于框架对常见用例的自动内容类型支持。扩展到不同的数据转换类型是可能的。")])]),t._v(" "),s("h2",{attrs:{id:"消息中间件应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#消息中间件应用场景"}},[t._v("#")]),t._v(" 消息中间件应用场景")]),t._v(" "),s("h3",{attrs:{id:"应用解耦"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用解耦"}},[t._v("#")]),t._v(" 应用解耦")]),t._v(" "),s("p",[t._v("假设有上百个系统都需要系统A的核心数据，此时负责系统A的工程师将是崩溃的，一旦有系统加入，A系统就需要修改代码，将数据发送到新加入的系统。反之，如果有系统不再需要A发送数据，那么A系统又得修改代码不再向其发送数据。这样的架构设计耦合度太高了，我们就可以引入消息中间件来实现系统之间的解耦。即核心系统A生产核心数据，然后将核心数据发送到消息中间件，下游消费系统根据自身需求从中间件里获取消息进行消费，当不再需要数据时就不取消息进即可，这样系统之间耦合度就大大降低了。具体流程图如下。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://imgtu.com/i/48Ysx0",target:"_blank",rel:"noopener noreferrer"}},[s("img",{staticClass:"lazy",attrs:{alt:"48Ysx0.png","data-src":"https://z3.ax1x.com/2021/09/19/48Ysx0.png",loading:"lazy"}}),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"异步处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步处理"}},[t._v("#")]),t._v(" 异步处理")]),t._v(" "),s("p",[t._v("比如在电商网站用户下单，下单完成后会给用户进行发送短信或者邮件，而这个发送短信和邮件过程不属于核心业务所以我们可以将其放到其他服务中，我们将原来的流式形式改为中间件模式")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://imgtu.com/i/48tokQ",target:"_blank",rel:"noopener noreferrer"}},[s("img",{staticClass:"lazy",attrs:{alt:"48tokQ.png","data-src":"https://z3.ax1x.com/2021/09/19/48tokQ.png",loading:"lazy"}}),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"流量削峰"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流量削峰"}},[t._v("#")]),t._v(" 流量削峰")]),t._v(" "),s("p",[t._v("比如秒杀服务，一下子进入许多需求针对这个场景我们可以将其中间加入一层消息队列，将请求的先入队列，然后再把队列中的请求平滑的推送给服务，或者让服务去队列中进行拉去。")]),t._v(" "),s("h3",{attrs:{id:"日志处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日志处理"}},[t._v("#")]),t._v(" 日志处理")]),t._v(" "),s("p",[t._v("对于小型项目来说，我们通常对日志的处理没有那么多要求，但当用户量达到一定的峰值后，问题便会出现。这式可以用Kafka进行对日志的的处理。")]),t._v(" "),s("h2",{attrs:{id:"核心概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心概念"}},[t._v("#")]),t._v(" 核心概念")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://imgtu.com/i/48d1j1",target:"_blank",rel:"noopener noreferrer"}},[s("img",{staticClass:"lazy",attrs:{alt:"48d1j1.png","data-src":"https://z3.ax1x.com/2021/09/19/48d1j1.png",loading:"lazy"}}),s("OutboundLink")],1)]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("组成")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Middleware")]),t._v(" "),s("td",[t._v("中间件支持RabbitMQ和Kafka")])]),t._v(" "),s("tr",[s("td",[t._v("Binder")]),t._v(" "),s("td",[t._v("目标绑定器，目标指的是Kafka或者RabbitMq，绑定器就是封装了目标中间件的包，如果操作的是Kafka就是使用spring-cloud-stream-binder-kafka,如果操作是rabbitMq就是使用spring-sttream-binder-rabbit")])]),t._v(" "),s("tr",[s("td",[t._v("@input")]),t._v(" "),s("td",[t._v("注解标识 输入通道，接收（消息消费者）的消息，将通过该通道进入应用程序。")])]),t._v(" "),s("tr",[s("td",[t._v("@output")]),t._v(" "),s("td",[t._v("注解标识输出通道，发布（消息产生者）的消息，将通过该通道离开应用程序")])]),t._v(" "),s("tr",[s("td",[t._v("@StreamListener")]),t._v(" "),s("td",[t._v("监听队列，消费者的队列的消息接收 和@Input一起使用")])]),t._v(" "),s("tr",[s("td",[t._v("@EnableBinding")]),t._v(" "),s("td",[t._v("注解标识绑定，将信道channel和交换机exchange绑定一起")])])])]),t._v(" "),s("h2",{attrs:{id:"工作原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[t._v("#")]),t._v(" 工作原理")]),t._v(" "),s("p",[t._v("通过定义绑定器作为中间层，实现应用程序与消息中间件细节的隔离，通过项应用程序暴漏统一的channel通道，使得应用程序不再考虑各种的消息中间件的实现，当需要升级消息中间件，或者使用更换其他的中间的产品时，我们需要做的就是更换对应的Binder绑定器而不需要修改其他的逻辑")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://imgtu.com/i/4GCjMV",target:"_blank",rel:"noopener noreferrer"}},[s("img",{staticClass:"lazy",attrs:{alt:"4GCjMV.png","data-src":"https://z3.ax1x.com/2021/09/20/4GCjMV.png",loading:"lazy"}}),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[t._v("Source: 当需要发送消息时，我们就 可以通过Source.java，他会 把我们所需要发送的消息进行序列化，然后将这些书籍发送到channel中")]),t._v(" "),s("li",[t._v("Sink：放我们需要监听消息时，就需要通过Sink.java，它负责从消息通道中获取消息，并将消息反序列化成消息对应的格式，然后交给具体的 监听处理")]),t._v(" "),s("li",[t._v("Channel ：通常我们向消息中间件发送消息或者 监听  消息时需要指定主题（topic）和消息队列名称，一旦我们需要变更主题的时候就需要修改消息发送或者消息监听的代码，通过channel对象配置哪个主题，这样变更主题时候就不同更改代码，从而实现中间 件的解耦")]),t._v(" "),s("li",[t._v("Binder：通过不同的Binder可以实现与不同的消息中间件整合，Binder提供统一的消息收发接口，从而使得我们可以根据实际需要部署不同的消息中间件，或者根据实际生产中所部署的消息中间件来调整我们的配置。")])]),t._v(" "),s("h2",{attrs:{id:"实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),s("h3",{attrs:{id:"依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#依赖"}},[t._v("#")]),t._v(" "),s("strong",[t._v("依赖")])]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.cloud"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-cloud-starter-stream-rabbit"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"生产者"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生产者"}},[t._v("#")]),t._v(" 生产者")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rabbitmq")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 192.168.126.128\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5672")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rabbit\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("virtual-host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  \t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  \t  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bindings")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  \t  \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 消息发送通道，同样也可以自定义配置通道")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("output")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("destination")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" stream.message "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 绑定的交换机的名称")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 自定义通道的名称 ")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("authorityOutput")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n\t\t  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("destination")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" stream.authority "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 绑定的交换机的名称")]),t._v("\n")])])]),s("p",[t._v("自定义配置发送通道接口")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthoritySource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" AUHORITY_OUTPUT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"authorityOutput"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Output")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthoritySource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AUTHORITY_OUTPUT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageChannel")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("authorityOutput")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("将信道与exchange绑定在一起，进行发送消息到channel中")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* 消息生产者\n**/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableBinding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthoritySource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthorityProduce")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注入自定义通道")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuhoritySource")]),t._v(" authoritySource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注入默认通道")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Source")]),t._v(" source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n\t* 使用自定义通道发送消息\n\t**/")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tauthoritySource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("output")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageBuilder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("withPayload")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n\t* 使用默认通道发送消息\n\t**/")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("output")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Mes")]),t._v("看   sageBuilder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("withPayload")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"消费者"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#消费者"}},[t._v("#")]),t._v(" 消费者")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("spring:\n  rabbitmq:\n    host: 192.168.126.128\n    port: 5672\n    username: rabbit\n    password: 123456\n    virtual-host:\n  cloud:\n  \tstream:\n  \t  bindings:\n  \t  \t# 消息发送通道，同样也可以自定义配置通道\n\t\tinput:\n\t\t  destination: stream.message # 绑定的交换机的名称\n\t\t# 自定义通道的名称 \n\t\tauthorityInput: \n\t\t  destination: stream.authority # 绑定的交换机的名称\n")])])]),s("p",[t._v("自定义配置发送通道接口")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthoritySink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" AUHORITY_INPUT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"authorityInput"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Output")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthoritySink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AUTHORITY_INPUT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SubScribableChannel")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("authorityInput")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("将消息和信道交换器进行绑定")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n*\n* 自定义消息消费者\n**/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableBinding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthoritySink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageConsumer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n    * 接收消息\n    **/")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@StreamListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthoritySink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AUHORITY_INPUT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("receive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n*\n* 默认消息消费者\n**/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableBinding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageConsumer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n    * 接收消息\n    **/")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@StreamListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("INPUT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("receive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"消息分组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#消息分组"}},[t._v("#")]),t._v(" 消息分组")]),t._v(" "),s("h2",{attrs:{id:"消息分区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#消息分区"}},[t._v("#")]),t._v(" 消息分区")]),t._v(" "),s("p",[t._v("​")])])}),[],!1,null,null,null);a.default=e.exports}}]);