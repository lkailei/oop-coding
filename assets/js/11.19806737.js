(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{402:function(t,s,a){"use strict";a.r(s);var e=a(31),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[t._v("#")]),t._v(" Docker")]),t._v(" "),a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("p",[t._v("Docker 是一个开源的应用容器引擎，基于 Go 语言 并遵从Apache2.0协议开源。 Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中， 然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。 容器是完全使用沙箱机制，相互之间不会有任何接口,更重要的是容器性能开销极低。")]),t._v(" "),a("p",[t._v("​\tDocker支持将软件编译成一个镜像；然后 在镜像中各种软件做好配置，将镜像发布 出去，其他使用者可以直接使用这个镜像。运行中的这个镜像称为容器，容器启动是 非常快速的。类似windows里面的ghost操 作系统，安装好后什么都有了")]),t._v(" "),a("h3",{attrs:{id:"为什么使用docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用docker"}},[t._v("#")]),t._v(" 为什么使用docker:")]),t._v(" "),a("p",[t._v("由于容器不需要进行硬件虚拟以及运行完整操作系统等额外开销，Docker 对系统资源的利用率更高。无论是应用执行速度、内存损耗或者文件存储速度，都要比传统虚拟机技术更高效。因此，相比虚拟机技术，一个相同配置的主机，往往可以运行更多数量的应用。")]),t._v(" "),a("ul",[a("li",[t._v("更快速的启动时间")]),t._v(" "),a("li",[t._v("一致的运行环境")]),t._v(" "),a("li",[t._v("持续交互和部署")]),t._v(" "),a("li",[t._v("更轻松的迁移")]),t._v(" "),a("li",[t._v("更轻松的维护和扩展")])]),t._v(" "),a("h3",{attrs:{id:"docker引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker引擎"}},[t._v("#")]),t._v(" Docker引擎：")]),t._v(" "),a("p",[a("code",[t._v("是一个包含以下主要组件的客户端服务器的应用程序")])]),t._v(" "),a("ul",[a("li",[t._v("一种服务器，他是一个称为守护进程并且长时间运行的程序")]),t._v(" "),a("li",[t._v("Rest ApI用于指定程序可以用来与守护进程通信的接口，并指示它做什么")]),t._v(" "),a("li",[t._v("一个有命令行界面工具的客户端")])]),t._v(" "),a("h3",{attrs:{id:"docker系统镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker系统镜像"}},[t._v("#")]),t._v(" Docker系统镜像：")]),t._v(" "),a("ul",[a("li",[t._v("Docker镜像(Images)：Docker 镜像是用于创建Docker 容器的 模板。")]),t._v(" "),a("li",[t._v("Docker容器(Container)：容器是独立运行的一个或一组应用。")]),t._v(" "),a("li",[t._v("Docker客户端(Client)：客户端通过命令行或者其他工具使用 Docker API(https://docs.docker.com/reference/api/docker_remote_api) 与Docker 的守护进程通信 docker主机(Host)：一个物理或者虚拟的机器用于执行 Docker 守护进程和容器。")]),t._v(" "),a("li",[t._v("Docker仓库(Registry)：Docker 仓库用来保存镜像，可以理解 为代码控制中的代码仓库。Docker Hub(https://hub.docker.com) 提供了庞大的镜像集合供使用")])]),t._v(" "),a("h3",{attrs:{id:"docker容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker容器"}},[t._v("#")]),t._v(" Docker容器：")]),t._v(" "),a("p",[t._v("Docker容器是docker运行的实体，容器可以被创建，启动，停止，删除，暂停等\n容器的实质是进程，但与直接在宿主执行的进程不同，容器进程运行于属于自己的独立的 命名空间。因此容器可以拥有自己的 root 文件系统、自己的网络配置、自己的进程空间，甚至自己的用户 ID 空间。容器内的进程是运行在一个隔离的环境里，使用起来，就好像是在一个独立于宿主的系统下操作一样。容器不应该向其存储层内写入任何数据，容器存储层要保持无状态化。所有的文件写入操作，都应该使用 数据卷（Volume）、或者绑定宿主目录，在这些位置的读写会跳过容器存储层，直接对宿主（或网络存储）发生读写，其性能和稳定性更高。数据卷的生存周期独立于容器，容器消亡，数据卷不会消亡")]),t._v(" "),a("h3",{attrs:{id:"docker仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker仓库"}},[t._v("#")]),t._v(" Docker仓库：")]),t._v(" "),a("p",[t._v("一个 Docker Registry 中可以包含多个仓库（Repository)；每个仓库可以包含多个标签（Tag）；每个标签对应一个镜像。\n​通常，一个仓库会包含同一个软件不同版本的镜像，而标签就常用于对应该软件的各个版本。我们可以通过 <仓库名>:<标签> 的格式来指定具体是这个软件哪个版本的镜像。如果不给出标签，将以 latest 作为默认标签。")]),t._v(" "),a("h2",{attrs:{id:"ubuntu安装docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu安装docker"}},[t._v("#")]),t._v(" ubuntu安装docker:")]),t._v(" "),a("ul",[a("li",[t._v("命令:\t"),a("code",[t._v("wget -q0- http://get.docker.com/ |sh")])]),t._v(" "),a("li",[t._v("启动："),a("code",[t._v("sudo service docker start")])]),t._v(" "),a("li",[t._v("测试运行:  "),a("code",[t._v("docker run hello-world")])]),t._v(" "),a("li",[t._v("镜像加速:\t /etc/docker/daemon.json 在这里加入"),a("code",[t._v('{ "registry-mirrors":["http://hub-mirror.c.163.com"]}')])])]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[t._v("ubuntu安装：\t\t\n\t\t1.更换国内软件源，推荐中国科技大学的源，稳定速度快（可选）\n\n\t\t\tsudo cp /etc/apt/sources.list /etc/apt/sources.list.bak\n\t\t\tsudo sed -i 's/archive.ubuntu.com/mirrors.ustc.edu.cn/g'\n\t\t\t/etc/apt/sources.list\n\t\t\tsudo apt update\n\t\t2.安装需要的包\n\t\t\tsudo apt install apt-transport-https ca-certificates software-properties-common curl\n\t\t3.添加 GPG 密钥，并添加 Docker-ce 软件源，这里还是以中国科技大学的 Docker-ce 源为例\n\t\t\tcurl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -\n\t\t\tsudo add-apt-repository \"deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu \\\n\t\t\t$添加成功后更新软件包缓存安装设置开机自启动并启动（安装成功后默认已设置并启动，可忽略）测试运行添加当前用户到用户组，可以不用运行（可选）(lsb_release -cs) stable\"\n\t\t4.添加成功后更新软件包缓存sudo apt update\n\t\t5.安装 Docker-ce:::     sudo apt install docker-ce\n\t\t6.设置开机自启动并启动 Docker-ce（安装成功后默认已设置并启动，可忽略）\n\t\t\tsudo systemctl enable docker\n\t\t\tsudo systemctl start docker\n\t\t7.测试运行sudo docker run hello-world\n\t\t8.添加当前用户到 docker 用户组，可以不用 sudo 运行 docker（可选）\n\t\t\tsudo groupadd docker\n\t\t\tsudo usermod -aG docker $USER\n\t\t9.测试添加用户组（可选）docker run hello-world\n")])])]),a("h3",{attrs:{id:"ubuntu脚本自动安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu脚本自动安装"}},[t._v("#")]),t._v(" ubuntu脚本自动安装：")]),t._v(" "),a("ul",[a("li",[t._v("1"),a("code",[t._v(".curl -fsSL get.docker.com -o get-docker.sh")])]),t._v(" "),a("li",[t._v("2."),a("code",[t._v("sh get-docker.sh --mirror Aliyun")]),t._v("\n​\t\t\t或者第二步使用："),a("code",[t._v("sudo sh get-docker.sh --mirror AzureChinaCloud")])]),t._v(" "),a("li",[t._v("3.测试是否安装成功：\n​\t\t\t"),a("code",[t._v("docker version")])])]),t._v(" "),a("h3",{attrs:{id:"ubuntu安装镜像加速器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu安装镜像加速器"}},[t._v("#")]),t._v(" ubuntu安装镜像加速器：")]),t._v(" "),a("p",[t._v("镜像加速: 如果没有则创建这个文件：\n​\t\t/etc/docker/daemon.json 在这里加入"),a("code",[t._v('{ "registry-mirrors":["https://registry.docker-cn.com"]}')]),t._v("\n重启服务：\n"),a("code",[t._v("​systemctl restart docker")])]),t._v(" "),a("h2",{attrs:{id:"centos安装docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#centos安装docker"}},[t._v("#")]),t._v(" Centos安装Docker")]),t._v(" "),a("h3",{attrs:{id:"centos命令安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#centos命令安装"}},[t._v("#")]),t._v(" centos命令安装")]),t._v(" "),a("p",[t._v("安装命令："),a("code",[t._v("yum install docker")])]),t._v(" "),a("p",[t._v("检查是否安装成功: "),a("code",[t._v("docker version")])]),t._v(" "),a("p",[t._v("启动docker server: "),a("code",[t._v("systemctl start docker.service")]),t._v(" 或者 "),a("code",[t._v("systemctl start docker")])]),t._v(" "),a("p",[t._v("设置docker开机自启："),a("code",[t._v("systemctl enable docker.service")])]),t._v(" "),a("p",[t._v("安装wget命令 ："),a("code",[t._v("yum -y install wget")])]),t._v(" "),a("p",[t._v("搜索一些包："),a("code",[t._v("yum search java|grep jdk")])]),t._v(" "),a("p",[t._v("安装vim编辑器："),a("code",[t._v("yum - y install vim*")])]),t._v(" "),a("p",[t._v("检查docker状态："),a("code",[t._v("systemctl status docker")])]),t._v(" "),a("p",[t._v("停止docker:  "),a("code",[t._v("systemctl stop docker")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://imgchr.com/i/Dmy2E4",target:"_blank",rel:"noopener noreferrer"}},[a("img",{staticClass:"lazy",attrs:{alt:"Dmy2E4.png","data-src":"https://s3.ax1x.com/2020/11/18/Dmy2E4.png",loading:"lazy"}}),a("OutboundLink")],1)]),t._v(" "),a("p",[a("strong",[t._v("idea链接：")])]),t._v(" "),a("p",[a("code",[t._v("vim /usr/lib/systemd/system/docker.service")]),t._v(" 找到 "),a("code",[t._v("ExecStart=/usr/bin/dockerd-current")]),t._v(" 然后直接加入如下")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("## ExecStart=/usr/bin/dockerd-current -H tcp://0.0.0.0:2375 -H unix://var/run/docker.sock \\\n\n")])])]),a("p",[a("a",{attrs:{href:"https://imgchr.com/i/Dm6UsK",target:"_blank",rel:"noopener noreferrer"}},[a("img",{staticClass:"lazy",attrs:{alt:"Dm6UsK.png","data-src":"https://s3.ax1x.com/2020/11/18/Dm6UsK.png",loading:"lazy"}}),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("然后进行重启：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("systemctl daemon-reload && systemctl restart docker\n")])])]),a("h2",{attrs:{id:"dockerfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[t._v("#")]),t._v(" DockerFile：")]),t._v(" "),a("p",[t._v("镜像的定制实际上就是定制每一层所添加的配置、文件。如果我们可以把每一层修改、安装、构建、操作的命令都写入一个脚本，用这个脚本来构建、定制镜像，那么之前提及的无法重复的问题、镜像构建透明性的问题、体积的问题就都会解决")]),t._v(" "),a("p",[t._v("dockerfile是一个文本文件，其内包含了一条条指令，每条指令构建一层，因此每条指令都应该描述如何构建.")]),t._v(" "),a("p",[a("strong",[t._v("注意：Dockerfile 的指令每执行一次都会在 docker 上新建一层。所以过多无意义的层，会造成镜像膨胀过大")])]),t._v(" "),a("p",[t._v("在 /usr/local:")]),t._v(" "),a("p",[t._v("​\t\t创建docker目录，然后创建一个tomcat的dockerfile目录，")]),t._v(" "),a("p",[t._v("​\t\t\t"),a("code",[t._v("from:")]),t._v(" 必须是第一条指令，用于指定基础的镜像")]),t._v(" "),a("p",[t._v("​\t\t\t"),a("code",[t._v("run")]),t._v(" ：用于执行命令行命令，由于命令行的强大，")]),t._v(" "),a("p",[t._v("命令有两种格式：shell格式:    exec格式：")]),t._v(" "),a("h3",{attrs:{id:"dokerfile指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dokerfile指令"}},[t._v("#")]),t._v(" DokerFile指令")]),t._v(" "),a("p",[t._v("指令相对比较庞大 自行学习把，比较常用的有 "),a("code",[t._v("FROM，RUN，还提及了COPY,ADD")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/wo18237095579/article/details/80540571?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control#%E4%BD%BF%E7%94%A8-dockerfile-%E5%AE%9A%E5%88%B6%E9%95%9C%E5%83%8F",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考：dockfile定制镜像"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"dockerfile轻量化方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile轻量化方式"}},[t._v("#")]),t._v(" DockerFile轻量化方式")]),t._v(" "),a("p",[a("strong",[t._v('下面的这个的dockerfile 是从 Debian "jessie"系统下构建一个编译、安装 redis 可执行文件。')])]),t._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" debian:jessie")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" apt-get update")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" apt-get install -y gcc libc6-dev make")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" wget -O redis.tar.gz "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://download.redis.io/releases/redis-3.2.5.tar.gz"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" mkdir -p /usr/src/redis")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" make -C /usr/src/redis")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" make -C /usr/src/redis install")]),t._v("\n")])])]),a("p",[t._v("Dockerfile 中每一个指令都会建立一层，"),a("code",[t._v("RUN")]),t._v(" 也不例外。每一个 "),a("code",[t._v("RUN")]),t._v(" 的行为，就和刚才我们手工建立镜像的过程一样：新建立一层，在其上执行这些命令，执行结束后，"),a("code",[t._v("commit")]),t._v(" 这一层的修改，构成新的镜像。")]),t._v(" "),a("p",[t._v("而上面的这种写法，创建了 7 层镜像。这是完全没有意义的，而且很多运行时不需要的东西，都被装进了镜像里，比如编译环境、更新的软件包等等。结果就是产生非常臃肿、非常多层的镜像，不仅仅增加了构建部署的时间，也很容易出错")]),t._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" debian:jessie")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" buildDeps="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gcc libc6-dev make'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),t._v("\n    && apt-get update "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),t._v("\n    && apt-get install -y "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$buildDeps")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),t._v("\n    && wget -O redis.tar.gz "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://download.redis.io/releases/redis-3.2.5.tar.gz"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),t._v("\n    && mkdir -p /usr/src/redis "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),t._v("\n    && tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),t._v("\n    && make -C /usr/src/redis "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),t._v("\n    && make -C /usr/src/redis install "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),t._v("\n    && rm -rf /var/lib/apt/lists/* "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),t._v("\n    && rm redis.tar.gz "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),t._v("\n    && rm -r /usr/src/redis "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),t._v("\n    && apt-get purge -y --auto-remove "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$buildDeps")])]),t._v("\n")])])]),a("p",[a("strong",[t._v("这里没有使用很多个 RUN 对一一对应不同的命令，而是仅仅使用一个 RUN 指令，并使用 && 将各个所需命令串联起来。将之前的 7 层，简化为了 1 层。这并不是在写 Shell 脚本，而是在定义每一层该如何构建.并且，这里为了格式化还进行了换行。Dockerfile 支持 Shell 类的行尾添加 "),a("code",[t._v("\\")]),t._v(" 的命令换行方式，以及行首 "),a("code",[t._v("#")]),t._v(" 进行注释的格式。良好的格式，比如换行、缩进、注释等，会让维护、排障更为容易，这是一个比较好的习惯。")])]),t._v(" "),a("p",[a("strong",[t._v("此外，还可以看到这一组命令的最后添加了清理工作的命令，删除了为了编译构建所需要的软件，清理了所有下载、展开的文件，并且还清理了 "),a("code",[t._v("apt")]),t._v(" 缓存文件。这是很重要的一步，我们之前说过，镜像是多层存储，每一层的东西并不会在下一层被删除，会一直跟随着镜像。因此镜像构建时，一定要确保每一层只添加真正需要添加的东西，任何无关的东西都应该清理掉")])]),t._v(" "),a("p",[t._v("​")]),t._v(" "),a("p",[a("strong",[t._v("关于层的图片请看：")])]),t._v(" "),a("p",[t._v("一个docker镜像由多个可读的镜像层组成，然后运行的容器会在这个docker的镜像上面多加一层可写的容器层，任何的对文件的更改都只存在此容器层。因此任何对容器的操作均不会影响到镜像")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"img","data-src":"https://images2018.cnblogs.com/blog/799055/201803/799055-20180309154723871-127136242.png",loading:"lazy"}})]),t._v(" "),a("p",[t._v("dockerfile 支持shell类后面添加\\命令方式换行，以及首行#号进行注释格式，很多人 制作出了很臃肿的镜像的原因之一，就是忘记了每一层构建的最后一定要清理掉无关文件. "),a("strong",[t._v("那就是使用&&进行链接")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" centos")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" yum install wget")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" wget -O redis.tar.gz "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://download.redis.io/releases/redis-5.0.3.tar.gz"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" tar -xvf redis.tar.gz")]),t._v("\n\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('以上执行会创建 3 层镜像。可简化为以下格式：\nFROM centos\nRUN yum install wget \\\n    && wget -O redis.tar.gz "http://download.redis.io/releases/redis-5.0.3.tar.gz" \\\n    && tar -xvf redis.tar.gz\n')])])]),a("p",[a("code",[t._v("docker bulid -t centos:1.0")]),t._v(" 进行构建")]),t._v(" "),a("p",[a("strong",[t._v("比如构建一个nginx")]),t._v(" :")]),t._v(" "),a("p",[t._v("在一个空白目录中，建立一个文本文件，并命名为 "),a("code",[t._v("Dockerfile")]),t._v("： "),a("code",[t._v("vim Dockerfile")])]),t._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("From")]),t._v(" nginx")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Run")]),t._v(" echo "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'</h1>Hello, Docker!</h1>'")]),t._v(" /usr/share/nginx/html/index.html")]),t._v("\n")])])]),a("p",[t._v("使用以下命令进行构建：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("docker build "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("选项"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("上下文路径/URL/-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("在这里我们指定了最终镜像的名称 "),a("code",[t._v("-t nginx:v3")]),t._v("，构建成功后，运行这个镜像")]),t._v(" "),a("p",[a("strong",[t._v("Dokerfile比较庞大具体的其他的构建可以去看 "),a("a",{attrs:{href:"https://github.com/docker-library",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker file list"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("更多关于docker层的概念请看：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/runner668/article/details/80955381?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-4.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-4.control",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker分层原理与内部结构"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/liumiaocn/article/details/100922774",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dockerfile实践指南之层数与大小的控制"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"http://dockone.io/article/8179",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker多阶段构建最佳实践"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/weixin_46119868/article/details/106337273",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker镜像的优化"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"使用上下文环境构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用上下文环境构建"}},[t._v("#")]),t._v(" 使用上下文环境构建：")]),t._v(" "),a("p",[t._v("会看到 "),a("code",[t._v("docker build")]),t._v(" 命令最后有一个 "),a("code",[t._v(".")]),t._v("。"),a("code",[t._v(".")]),t._v(" 表示当前目录，而 "),a("code",[t._v("Dockerfile")]),t._v(" 就在当前目录，"),a("code",[t._v("这个路径不能认为是在指定 Dockerfile 所在的路径")]),t._v("，这么理解其实是不准确的。如果对应上面的命令格式，你可能会发现，这是在指定"),a("strong",[t._v("上下文路径")]),t._v("。")]),t._v(" "),a("p",[t._v("一般来说，应该会将 "),a("code",[t._v("Dockerfile")]),t._v(" 置于一个空目录下，或者项目根目录下。如果该目录下没有所需文件，那么应该把所需文件复制一份过来。如果目录下有些东西确实不希望构建时传给 Docker 引擎，那么可以用 "),a("code",[t._v(".gitignore")]),t._v(" 一样的语法写一个 "),a("code",[t._v(".dockerignore")]),t._v("，该文件是用于剔除不需要作为上下文传递给 Docker 引擎的。")]),t._v(" "),a("p",[t._v("那么为什么会有人误以为 "),a("code",[t._v(".")]),t._v(" 是指定 "),a("code",[t._v("Dockerfile")]),t._v(" 所在目录呢？这是因为在默认情况下，如果不额外指定 "),a("code",[t._v("Dockerfile")]),t._v(" 的话，会将上下文目录下的名为 "),a("code",[t._v("Dockerfile")]),t._v(" 的文件作为 Dockerfile。")]),t._v(" "),a("p",[t._v("这只是默认行为，实际上 "),a("code",[t._v("Dockerfile")]),t._v(" 的文件名并不要求必须为 "),a("code",[t._v("Dockerfile")]),t._v("，而且并不要求必须位于上下文目录中，比如可以用 "),a("code",[t._v("-f ../Dockerfile.php")]),t._v(" 参数指定某个文件作为 "),a("code",[t._v("Dockerfile")]),t._v("。")]),t._v(" "),a("p",[t._v("当然，一般大家习惯性的会使用默认的文件名 "),a("code",[t._v("Dockerfile")]),t._v("，以及会将其置于镜像构建上下文目录中。")]),t._v(" "),a("p",[t._v("创建一个html文件：")]),t._v(" "),a("p",[t._v("​\t创建一个Dockerfile 里面书写："),a("code",[t._v("from tomcat\tcopy /usr/local/tomcat/webapps/root")]),t._v("\n​\t然后执行一个为："),a("code",[t._v("docker build -t myshop")]),t._v(" .\n​\t里会自动的寻找到 Dockerfile可以看到打印的执行的语句然后进入 tomcat中会发现已经创建了个index.html")]),t._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[t._v("在Dockerfile 中的使用\t构建时先声明\n    "),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" tomcat")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("workdir")]),t._v(" /usr/local/tomcat/webapps/root/")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("run")]),t._v(" rm -fr *")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("copy")]),t._v(" spring-boot-institute.jar .")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Run")]),t._v("  unzip spring-boot-institute.jar")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("run")]),t._v(" rm -fr spring-boot-institute.jar")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("workdir")]),t._v(" /usr/local/tomcat")]),t._v("\n")])])]),a("p",[t._v("运行这个docker容器："),a("code",[t._v("docker build -t institute")]),t._v("\t 这里会自动的寻找到Dockerfile")]),t._v(" "),a("p",[a("strong",[t._v("比如一个项目中这样使用：")])]),t._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" php:apache")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Install git")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" apt-get update ")]),t._v("\n\t&& apt-get install -y git\n    && docker-php-ext-install pdo pdo_mysql mysqli\n    && a2enmod rewrite\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Install Composer")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" php -r "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"copy('https://getcomposer.org/installer', 'composer-setup.php');\"")])]),t._v("\n&& php composer-setup.php --install-dir=. --filename=composer\n&& mv composer /usr/local/bin/\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" ./html/ /var/www/html/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" 80")]),t._v("\n")])])]),a("p",[a("strong",[t._v("执行命令启动")]),t._v(" ： "),a("code",[t._v("docker build -f dockerfile -t myapp:0.1")])]),t._v(" "),a("p",[a("strong",[t._v("比如一个maven项目 ：")])]),t._v(" "),a("p",[t._v("创建一个DockerFile   "),a("code",[t._v("vim dockerfile")])]),t._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# First stage: complete build environment")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" maven:3.5.0-jdk-8-alpine "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" builder")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# add pom.xml and source code")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" ./pom.xml pom.xml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" ./src src/")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# package jar")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" mvn clean package")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Second stage: minimal runtime environment")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("From")]),t._v(" openjdk:8-jre-alpine")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# copy jar from the first stage")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token options"}},[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("--from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("builder")])]),t._v(" target/my-app-1.0-SNAPSHOT.jar my-app-1.0-SNAPSHOT.jar")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" 8080")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CMD")]),t._v(" ["),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"java"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-jar"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my-app-1.0-SNAPSHOT.jar"')]),t._v("]")]),t._v("\n")])])]),a("p",[a("strong",[t._v("执行命令启动")]),t._v(" ： "),a("code",[t._v("docker build -f dockerfile -t myapp:0.1")])]),t._v(" "),a("h2",{attrs:{id:"docker数据卷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker数据卷"}},[t._v("#")]),t._v(" Docker数据卷：")]),t._v(" "),a("p",[t._v("数据卷 是一个可供一个或多个容器使用的特殊目录，它绕过 UFS，可以提供很多有用的特性：")]),t._v(" "),a("p",[t._v("数据卷 可以在容器之间共享和重用")]),t._v(" "),a("p",[t._v("对 数据卷 的修改会立马生效")]),t._v(" "),a("p",[t._v("对 数据卷 的更新，不会影响镜像")]),t._v(" "),a("p",[t._v("数据卷 默认会一直存在，即使容器被删除")]),t._v(" "),a("p",[t._v("注意：数据卷 的使用，类似于 Linux 下对目录或文件进行 mount，镜像中的被指定为挂载点的目录中的文件会隐藏掉，能显示看的是挂载的 数据卷。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("创建一个数据卷：docker volume create my-vol")])]),t._v(" "),a("li",[t._v("``查看所有数据卷：docker volume ls`")]),t._v(" "),a("li",[a("code",[t._v("在")]),t._v("主机里查看指定的数据卷：docker volume inspect my-vol启动一个挂载的数据容器："),a("code",[t._v("在用 docker run 命令的时候，使用 --mount 标记来将 数据卷 挂载到容器里。在一次 docker run 中可以挂载多个 数据卷。")])]),t._v(" "),a("li",[a("code",[t._v("下面创建一个名为 web 的容器，并加载一个 数据卷 到容器的 /webapp 目录。：")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ docker run -d -P \\\n  --name web \\\n\t# -v my-vol:/wepapp \\\n\t--mount source=my-vol,target=/webapp \\\n\ttraining/webapp \\\n\tpython app.py\n")])])]),a("h3",{attrs:{id:"查看数据卷的信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看数据卷的信息"}},[t._v("#")]),t._v(" 查看数据卷的信息：")]),t._v(" "),a("p",[t._v("​\t\t在主机里使用以下命令可以查看 web 容器的信息\n​\t\tdocker inspect web")]),t._v(" "),a("h3",{attrs:{id:"删除数据卷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除数据卷"}},[t._v("#")]),t._v(" 删除数据卷：")]),t._v(" "),a("p",[t._v("​\t\t"),a("code",[t._v("命令：docker volume rm my-vol")])]),t._v(" "),a("p",[t._v("​\t\t数据卷 是被设计用来持久化数据的，它的生命周期独立于容器，Docker 不会在容器被删除后自动删除 数据卷，并且也不存在垃圾回收这样的机制来处理没有任何容器引用的 数据卷。如果需要在删除容器的同时移除数据卷。可以在删除容器的时候使用 docker rm -v 这个命令。")]),t._v(" "),a("h3",{attrs:{id:"无主的数据卷的删除用以下命令清理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无主的数据卷的删除用以下命令清理"}},[t._v("#")]),t._v(" 无主的数据卷的删除用以下命令清理：")]),t._v(" "),a("p",[a("code",[t._v("docker volume pruse")])]),t._v(" "),a("h3",{attrs:{id:"实例共享数据卷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例共享数据卷"}},[t._v("#")]),t._v(" 实例共享数据卷：")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("在/usr/loca/docker/tomcat下创建一个ROOT目录，并在里面书写一个index.html")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("然后启动docker容器的tomcat：")])]),t._v(" "),a("p",[a("code",[t._v("docker run -p 8080:8080 --name tomcat -d -v /usr/local/docker/tomcat/ROOT:/usr/local/tomcat/webapps/ROOT tomcat")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("通过交互式进入容器中的tomcat：docker exec -it tomcat bash")]),t._v(" "),a("code",[t._v("可以在webapps中的ROOT目录看到index.html，")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("然后在启动一个tomcat:docker run -p 8081:8080 --name tomcat1 -d -v /usr/local/docker/tomcat/ROOT:/usr/local/tomcat/webapps/ROOT tomcat")]),t._v(" "),a("code",[t._v("这时访问就可以看到两个同时访问了一个数据卷了，这时就可以共享到数据卷了")])])])]),t._v(" "),a("h2",{attrs:{id:"docker镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker镜像"}},[t._v("#")]),t._v(" Docker镜像：")]),t._v(" "),a("h3",{attrs:{id:"docker下载镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker下载镜像"}},[t._v("#")]),t._v(" docker下载镜像：")]),t._v(" "),a("p",[a("code",[t._v("1.docker pull ubuntu:16.04")]),t._v(" "),a("code",[t._v("//docker image ls :查看镜像列表列出的是顶级的镜像")]),t._v(" "),a("code",[t._v("// docker ps :查看容器列表")])]),t._v(" "),a("p",[a("code",[t._v("2.运行这个ubuntu容器：")]),t._v(" "),a("code",[t._v("docker run -it --rm \\")]),t._v(" "),a("code",[t._v("ubuntu:16.04 \\")]),t._v(" "),a("code",[t._v("bash")]),t._v(" "),a("code",[t._v("其实上面的一串命令等于：docker run -it --rm ubuntu:16.04 bash")]),t._v(" "),a("code",[t._v("3.说明：")]),t._v("\nit：这是两个参数，一个是 -i：交互式操作，一个是 -t 终端。我们这里打算进入 bash 执行一些命令并查看返回结果，因此我们需要交互式终端。")]),t._v(" "),a("p",[t._v("​\t\t\t--rm：这个参数是说容器退出后随之将其删除。默认情况下，为了排障需求，退出的容器并不会立即删除，除非手动 docker rm。我们这里只是随便执行个命令，看看结果，不需要排障和保留结果，因此使用 --rm 可以避免浪费空间。ubuntu:16.04：这是指用 ubuntu:16.04 镜像为基础来启动容器。bash：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 bash运行一个容器等于运行一个对象，")]),t._v(" "),a("h3",{attrs:{id:"docker镜像操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker镜像操作"}},[t._v("#")]),t._v(" Docker镜像操作")]),t._v(" "),a("p",[a("strong",[t._v("列出镜像")]),t._v("："),a("code",[t._v("docker image ls")])]),t._v(" "),a("p",[a("strong",[t._v("拉取镜像")]),t._v("："),a("code",[t._v("docker pull [ubuntu:13.10]")])]),t._v(" "),a("p",[a("strong",[t._v("查找镜像")]),t._v("："),a("code",[t._v("docker search [httpd]")])]),t._v(" "),a("p",[a("strong",[t._v("镜像是不能够单独启动的他是依靠容器的")]),t._v("  根据镜像运行一个容器： "),a("code",[t._v("docker run --name container-name -d image-name")])]),t._v(" "),a("p",[t._v("eg : "),a("code",[t._v("docker run –name myredis –d redis")]),t._v("\n​")]),t._v(" "),a("blockquote",[a("p",[t._v("​\t\t --name：自定义容器名")]),t._v(" "),a("p",[t._v("​\t\t -d：后台运行 image-name:指定镜像模板 列表 docker ps（查看运行中的容器）；")]),t._v(" "),a("p",[t._v("​\t\t加上-a；可以查看所有容器\n​\t\t//docker image ls :查看镜像列表列出的是顶级的镜像\n​\t\t//docker ps :查看容器列表")])]),t._v(" "),a("p",[a("strong",[t._v("删除镜像")]),t._v("： "),a("code",[t._v("docker image rm [选项] <镜像1> [镜像2，...]")]),t._v("    其中，"),a("code",[t._v("<镜像>")]),t._v(" 可以是 "),a("code",[t._v("镜像短 ID")]),t._v("、"),a("code",[t._v("镜像长 ID")]),t._v("、"),a("code",[t._v("镜像名")]),t._v(" 或者 "),a("code",[t._v("镜像摘要")]),t._v("。或者： "),a("code",[t._v("docker rmi [镜像name]")])]),t._v(" "),a("p",[a("strong",[t._v("构建镜像")]),t._v("："),a("code",[t._v("docker build -t runoob/centos:6.7 .")])]),t._v(" "),a("p",[t._v("参数说明：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("-t")]),t._v(" ：指定要创建的目标镜像名")]),t._v(" "),a("li",[a("strong",[t._v(".")]),t._v(" ：Dockerfile 文件所在目录，可以指定Dockerfile 的绝对路径")])]),t._v(" "),a("p",[t._v("❤"),a("em",[t._v("注")]),t._v("：[]内均为参数，也就是必选的")]),t._v(" "),a("h3",{attrs:{id:"虚悬镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚悬镜像"}},[t._v("#")]),t._v(" 虚悬镜像：")]),t._v(" "),a("p",[t._v("镜像列表中，还可以看到一个特殊的镜像，这个镜像既没有仓库名，也没有标签，均为 "),a("code",[t._v("<none>")]),t._v("。")]),t._v(" "),a("p",[t._v("原因：")]),t._v(" "),a("p",[t._v("​\t这个镜像原本是有镜像名和标签的，原来为 mongo:3.2，随着官方镜像维护，发布了新版本后，重新 docker pull mongo:3.2 时，mongo:3.2 这个镜像名被转移到了新下载的镜像身上，而旧的镜像上的这个名称则被取消，从而成为了  "),a("code",[t._v("<none>")]),t._v("。除了 docker pull 可能导致这种情况，docker build 也同样可以导致这种现象。")]),t._v(" "),a("p",[t._v("​\t由于新旧镜像同名，旧镜像名称被取消，从而出现仓库名、标签均为 "),a("code",[t._v("<none>")]),t._v(" 的镜像。")]),t._v(" "),a("h4",{attrs:{id:"删除虚悬镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除虚悬镜像"}},[t._v("#")]),t._v(" 删除虚悬镜像：")]),t._v(" "),a("p",[a("code",[t._v("$ docker image prune")])]),t._v(" "),a("h4",{attrs:{id:"查看中间层镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看中间层镜像"}},[t._v("#")]),t._v(" 查看中间层镜像：")]),t._v(" "),a("p",[a("code",[t._v("docker image ls -a")])]),t._v(" "),a("p",[t._v("​     这些无标签的镜像很多都是中间层镜像，是其它镜像所依赖的镜像。这些无标签镜像不应该删除，否则会导致上层镜像因为依赖丢失而出错。")]),t._v(" "),a("p",[t._v("​\t实际上，这些镜像也没必要删除，因为之前说过，相同的层只会存一遍，而这些镜像是别的镜像的依赖，因此并不会因为它们被列出来而多存了一份，无论如何你也会需要它们")]),t._v(" "),a("p",[t._v("​\tdocker image ls 还支持强大的过滤器参数 --filter，或者简写 -f。之前我们已经看到了使用过滤器来列出虚悬镜像的用法，它还有更多的用法。比如，我们希望看到在 mongo:3.2 之后建立的镜像")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ docker image ls -f since=mongo:3.2  \n想看某个位置之前的镜像 ：只需要把 since 换成 before\n")])])]),a("h4",{attrs:{id:"删除指定的镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除指定的镜像"}},[t._v("#")]),t._v(" 删除指定的镜像：")]),t._v(" "),a("p",[t._v("​\t"),a("code",[t._v("docker image rm [选项] <镜像1> [<镜像2> ...]")]),t._v(" 其中，"),a("code",[t._v("<镜像>")]),t._v(" 可以是 镜像短 ID、镜像长 ID、镜像名 或者 镜像摘要。")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[t._v("停止 docker stop container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name/container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("id 停止当前你运行的容器 \n启动 docker start container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name/container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("id 启动容器\n删除 docker rm container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("id 删除指定容器 \n端口映射 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p 6379"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("6379 eg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("docker run "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p 6379"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("6379 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name myredis docker.io/redis "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("主机端口(映射到)容器内部的端口\n容器日志 docker logs container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name/container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("id\t\n")])])]),a("h2",{attrs:{id:"docker-容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-容器"}},[t._v("#")]),t._v(" Docker 容器")]),t._v(" "),a("h3",{attrs:{id:"docker-容器命令操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-容器命令操作"}},[t._v("#")]),t._v(" Docker 容器命令操作")]),t._v(" "),a("p",[t._v("新建容器：-t选项让Docker分配一个伪终端并绑定到容器的标准输入上，-i则让容器的标准输入保持打开")]),t._v(" "),a("p",[a("code",[t._v("docker create -it ubuntu:latest")])]),t._v(" "),a("p",[t._v("启动容器："),a("code",[t._v("docker start [container ID or NAMES]")]),t._v(" "),a("strong",[t._v("docker start 26c7868e652f")])]),t._v(" "),a("p",[t._v("新建并启动容器  "),a("code",[t._v("docker run [container ID or NAMES]")])]),t._v(" "),a("p",[t._v("守护态运行 ： "),a("code",[t._v('docker run -d ubuntu:17.10 /bin/sh -c "while true; do echo hello world; sleep 1; done"')])]),t._v(" "),a("p",[t._v("停止容器运行 ： "),a("code",[t._v("docker container stop [id]")]),t._v(" 等价于---\x3e "),a("code",[t._v("docker stop [id]")]),t._v("  例如："),a("strong",[t._v("docker container stop 635c90c02f22")])]),t._v(" "),a("p",[t._v("查看容器列表 ： "),a("code",[t._v("docker container ls")])]),t._v(" "),a("p",[t._v("查看容器 ： "),a("code",[t._v("docker container ls -a")])]),t._v(" "),a("p",[a("em",[t._v("查看当前运行的容器 （旧）："),a("code",[t._v("docker ps")])])]),t._v(" "),a("p",[a("em",[t._v("查看全部容器（旧）： "),a("code",[t._v("docker ps -a")])])]),t._v(" "),a("p",[t._v("进入容器： "),a("code",[t._v("docker exec -t [ubuntu]")])]),t._v(" "),a("p",[t._v("删除容器 ： "),a("code",[t._v("docker container rm [container-name]")]),t._v("  或者 ："),a("code",[t._v("docker rm -f [continer Id 或者name]")])]),t._v(" "),a("p",[t._v("docker rm [-f|--force] [-l|--link] [-v|--volumes] CONTAINER [CONTAINER...]")]),t._v(" "),a("p",[t._v("主要支持的选项包括")]),t._v(" "),a("p",[t._v("1） -f, --force=false：是否强行终止并删除一个运行中的容器")]),t._v(" "),a("p",[t._v("2） -l, --link=false：删除容器的连接，但保留容器")]),t._v(" "),a("p",[t._v("3） -v, --volumes=false：删除容器挂载的数据卷。")]),t._v(" "),a("p",[t._v("清理所有处于终止的容器 ： "),a("code",[t._v("docker container prune")])]),t._v(" "),a("p",[t._v("设置容器开机启动： 前提是docker已经设置为开机自启动了。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("重启策略：\n\tno -  容器退出时，不重启容器；\n\ton-failure - 只有在非0状态退出时才从新启动容器；\n\talways - 无论退出状态是如何，都重启容器；\n\n\t还可以在使用on - failure策略时，指定Docker将尝试重新启动容器的最大次数。默认情况下，Docker将尝试永远重新启动容器。\n\t\n\t在启动容器的时候设置\n\tdocker run --restart=on-failure:3 redis\n\t如果容器已经启动后\n\tdocker update --restart=on-failure:3 redis\n")])])]),a("p",[t._v("查看日志 ： "),a("code",[t._v("docker container logs [container ID or NAMES]")]),t._v(" "),a("strong",[t._v("例：docker container logs 635c90c02f22")])]),t._v(" "),a("p",[t._v("❤"),a("em",[t._v("注")]),t._v("：[]内均为参数，也就是必选的，")]),t._v(" "),a("h2",{attrs:{id:"docker构建tomact"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker构建tomact"}},[t._v("#")]),t._v(" Docker构建tomact:")]),t._v(" "),a("p",[t._v("​\t进入docker目录："),a("code",[t._v("docker pull tomcat")])]),t._v(" "),a("p",[t._v("​\t启动：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker run --name tomcat -p 8080:8080 -v $PWD/test:/usr/local/tomcat/webapps/test -d tomcat\n说明：\n-p 8080:8080：将容器的8080端口映射到主机的8080端口\n-v $PWD/test:/usr/local/tomcat/webapps/test：将主机中当前目录下的test挂载到容器的/test \n")])])]),a("p",[t._v("​\t查看容器启动情况：docker ps")]),t._v(" "),a("p",[a("strong",[t._v("备注：")])]),t._v(" "),a("ul",[a("li",[t._v("1.命令："),a("code",[t._v("docker pull tomcat")]),t._v("\n下载tomcat 9： "),a("code",[t._v("docker pull tomcat:9-jre8")])]),t._v(" "),a("li",[t._v("2.docker中运行tomcat：需要制定端口\n"),a("code",[t._v("docker run -p 8080:8080 tomcat")])])]),t._v(" "),a("h2",{attrs:{id:"docker构建mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker构建mysql"}},[t._v("#")]),t._v(" Docker构建mysql:")]),t._v(" "),a("p",[t._v("​\t进入docker目录："),a("code",[t._v("docker pull mysql:5.7.22")]),t._v("\n​\t启动运行：")]),t._v(" "),a("blockquote",[a("p",[t._v("docker run -p 3306:3306 --name mysql "),a("br"),t._v("\n​\t\t\t\t-v /usr/local/docker/mysql/conf:/etc/mysql "),a("br"),t._v("\n​\t\t\t\t-v /usr/local/docker/mysql/logs:/var/log/mysql "),a("br"),t._v("\n​\t\t\t\t-v /usr/local/docker/mysql/data:/var/lib/mysql "),a("br"),t._v("\n​\t\t\t\t-e MYSQL_ROOT_PASSWORD=lkl555 "),a("br"),t._v("\n​\t\t\t\t-d mysql:5.7.22\n​\t说明：-p 3306:3306：将容器的3306端口映射到主机的3306端口\n​\t\t\t-v /usr/local/docker/mysql/conf:/etc/mysql：将主机当前目录下的 conf 挂载到容器的 /etc/mysql\n​\t\t\t-v /usr/local/docker/mysql/logs:/var/log/mysql：将主机当前目录下的 logs 目录挂载到容器的 /var/log/mysql\n​\t\t\t-v /usr/local/docker/mysql/data:/var/lib/mysql：将主机当前目录下的 data 目录挂载到容器的 /var/lib/mysql\n​\t\t\t-e MYSQL_ROOT_PASSWORD=123456：初始化root用户的密码\n​\t查看：docker ps -a 查看刚刚启动的服务")])]),t._v(" "),a("h3",{attrs:{id:"出现的错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现的错误"}},[t._v("#")]),t._v(" 出现的错误：")]),t._v(" "),a("p",[t._v("​\tError response from daemon: driver failed programming external connectivity on endpoint mysql (c28bcf099d63d5f3b2affd38a033a42d60e3cf7054fc1bd520342b73f6a2987b): Error starting userland proxy: listen tcp 0.0.0.0:3306: bind: address already in use")]),t._v(" "),a("p",[t._v("​\t\t原因是本地的mysql已经启动了端口不能够进行映射了、")]),t._v(" "),a("p",[t._v("​\t\t所以停掉本地的mysql服务：sudo service mysql stop")]),t._v(" "),a("p",[t._v("​\t\t或者使用：docker ps -a")]),t._v(" "),a("p",[t._v("​\t\t然后使用 docker rm xxxxxxxxx")]),t._v(" "),a("p",[t._v("​\t\t然后再从新启动")]),t._v(" "),a("p",[t._v("​\t需要进入：docker容器内")]),t._v(" "),a("blockquote",[a("p",[t._v("​\t\tdocker run -it --rm mysql:5.7.22 bash\n​\t\tls  -al\n​\t\t查看安装到容器的哪个位置：whereis mysql\n​\t\t进入、etc/mysql/mysql.conf.d")]),t._v(" "),a("p",[t._v("​\t\t查看 mysqld.cnf是否有 max_allowd_packet=128M")]),t._v(" "),a("p",[t._v('​\t\t没有的话则进行追加：echo "max_allowd_packet=128M" >> mysqld.cnf')]),t._v(" "),a("p",[t._v("​\t\t这样是为了设置mysql可以执行文件的大小。")]),t._v(" "),a("p",[t._v("​\t\t修改之后退出，进入ubuntu界面，然后重启mysql容器 docker restart mysql\n​\t将容器里面的配置文件移到宿主机 mysql/conf 目录下: docker cp  mysql:/etc/mysql .\n​\t将这些文件移动到conf目录下")])]),t._v(" "),a("p",[t._v("​\t注意：这里出现了错误并不能够去copy过去。。。。")]),t._v(" "),a("h2",{attrs:{id:"docker构建oracle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker构建oracle"}},[t._v("#")]),t._v(" Docker构建oracle")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.拉去oracle数据库镜像\n"),a("code",[t._v("docker pull registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g")])])]),t._v(" "),a("li",[a("p",[t._v("2.启动oracle  自动启动镜像 --restart=always\n"),a("code",[t._v("docker run -p 1521:1521 --name oracle_11g -d --restart=always registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g")])])]),t._v(" "),a("li",[a("p",[t._v("3.启动服务："),a("code",[t._v("docker start oracle_11g")])])]),t._v(" "),a("li",[a("p",[t._v("4.进入控制台设置用户信息 ："),a("code",[t._v("docker exec -it oracle_11g bash")])])]),t._v(" "),a("li",[a("p",[t._v("5.切换到root用户模式下\nsu root\n输入密码helowin")])]),t._v(" "),a("li",[a("p",[t._v("6.编辑profile文件配置ORACLE环境变量")]),t._v(" "),a("blockquote",[a("p",[t._v("export ORACLE_HOME=/home/oracle/app/oracle/product/11.2.0/dbhome_2\nexport ORACLE_SID=helowin\nexport PATH=$ORACLE_HOME/bin:$PATH")])])]),t._v(" "),a("li",[a("p",[t._v("7.重启配置文件服务\nsource /etc/profile")])]),t._v(" "),a("li",[a("p",[t._v("8.建立sqlplus软连接\nln -s $ORACLE_HOME/bin/sqlplus /usr/bin")])]),t._v(" "),a("li",[a("p",[t._v("9.切换到oracle用户，修改oracle的相关账号密码")])])]),t._v(" "),a("blockquote",[a("p",[t._v("su oracle\n//登录sqlplus并修改sys、system用户密码\nsqlplus /nolog")]),t._v(" "),a("p",[t._v("conn /as sysdba")]),t._v(" "),a("p",[t._v("alter user system identified by oracle;  # 将system的密码改为oracle")]),t._v(" "),a("p",[t._v("alter user sys identified by oracle; # 将sys的密码改为oracle")]),t._v(" "),a("p",[t._v("ALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED; # 更改配置文件默认限制密码")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("10.使用navicat进行连接：")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://s1.ax1x.com/2020/10/08/0wqRa9.png",alt:"0wq9E9.png"}}),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://s1.ax1x.com/2020/10/08/0wq9E9.png",alt:"0wq9E9.png"}})])]),t._v(" "),a("h4",{attrs:{id:"oracle中的sys用户和system用户的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oracle中的sys用户和system用户的区别"}},[t._v("#")]),t._v(" oracle中的sys用户和system用户的区别：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("【sys】所有 oracle 的数据字典的基表和视图都存放在 sys 用户中，这些基表和视图对于 oracle 的运行是至关重要的，由数据库自己维护，任何用户都不能手动更改。 sys 用户拥有 dba ， sysdba ， sysoper 等角色或权限，是 oracle 权限最高的用户。")])]),t._v(" "),a("li",[a("code",[t._v("【 system】 用户用于存放次一级的内部数据，如 oracle 的一些特性或工具的管理信息。 system 用户拥有普通 dba 角色权限。")])]),t._v(" "),a("li",[a("code",[t._v("【system】用户只能用 normal 身份登陆 em ，除非你对它授予了 sysdba 的系统权限(grant sysdba to system)或者 sysoper 系统权限。")])]),t._v(" "),a("li",[a("code",[t._v("【 sys 】用户具有 “SYSDBA” 或者 “SYSOPER” 系统权限，登陆 em 也只能用这两个身份，不能用 normal 。")])])]),t._v(" "),a("h2",{attrs:{id:"docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[t._v("#")]),t._v(" Docker Compose:")]),t._v(" "),a("ul",[a("li",[t._v("Docker Compose：是docker官方编排的快速，对于容器集群很有利")]),t._v(" "),a("li",[t._v("Compose定位是：定义和运行多个Docker容器的应用，主要是为了解决多个容器间的相互配合来完成某项任务。他允许用户通过docker-compose.yml的定义一组相关连的应用容器为一个项目")]),t._v(" "),a("li",[t._v("服务：一个应用容器，实际上可以包括若干个运行相同镜像的容器实例")]),t._v(" "),a("li",[t._v("项目：由一组关联的应用容器组成的一个完整业务单元，在docker-compose.yml中定义compose默认管理的是对象是项目，通过子命令对项目快捷的生命周期的管理")])]),t._v(" "),a("h3",{attrs:{id:"安装docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装docker-compose"}},[t._v("#")]),t._v(" 安装docker compose:")]),t._v(" "),a("p",[a("code",[t._v("如果你已经安装了docker那么就先把docker给删除了，")])]),t._v(" "),a("p",[a("code",[t._v("先进行卸载：apt-get autoremove docker-cedocker")])]),t._v(" "),a("p",[a("code",[t._v("然后删除dokcerlist文件：在/etc/apt/sources.list.d")])]),t._v(" "),a("h4",{attrs:{id:"安装docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装docker"}},[t._v("#")]),t._v(" 安装docker：")]),t._v(" "),a("p",[t._v("安装docker :  "),a("code",[t._v("sudo curl -fsSL get.docker.com -o get-docker.sh")])]),t._v(" "),a("p",[t._v("因为有的aliyun上面没有具体的升级版本，所以把镜像给改写："),a("code",[t._v("sh get-docker.sh --mirror AzureChinaCloudcd")])]),t._v(" "),a("p",[t._v("这时只需等待即可。。。。。。")]),t._v(" "),a("p",[t._v("检查镜像加速文件是否存在：在/etc/docker/daemon.json中\n​\t/etc/docker/daemon.json 在这里加入"),a("code",[t._v('{ "registry-mirrors":["https://registry.docker-cn.com"]}')])]),t._v(" "),a("p",[t._v("检查dockerversion:")]),t._v(" "),a("p",[t._v("然后安装docker-compose看下面的就可以了")]),t._v(" "),a("p",[t._v("安装docker 和docker compose要同时安装，")]),t._v(" "),a("p",[t._v("linux安装docker compose：采用二进制包进行安装：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ sudo curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose\n加入可执行的权限：\n$ sudo chmod +x /usr/local/bin/docker-compose\n")])])]),a("h3",{attrs:{id:"卸载docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#卸载docker-compose"}},[t._v("#")]),t._v(" 卸载docker compose:")]),t._v(" "),a("p",[t._v("​\t"),a("code",[t._v("$ sudo rm /usr/local/bin/docker-compose")])]),t._v(" "),a("h3",{attrs:{id:"docker-compose-使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-使用"}},[t._v("#")]),t._v(" Docker Compose 使用：")]),t._v(" "),a("h4",{attrs:{id:"模板文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模板文件"}},[t._v("#")]),t._v(" 模板文件：")]),t._v(" "),a("p",[t._v("在docker 文件夹中的tomcat中的创建 docker-compose.yml")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("webapp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" examples/web\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"80:80"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/data"')]),t._v("\n\n")])])]),a("p",[t._v("注意每个服务都必须通过 image 指令指定镜像或 build 指令（需要 Dockerfile）等来自动构建生成镜像。")]),t._v(" "),a("p",[t._v("运行 compose 项目： docker-compose up")]),t._v(" "),a("h3",{attrs:{id:"docker-compose命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose命令"}},[t._v("#")]),t._v(" Docker compose命令：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('基本的命令的格式的：docker-compose [-f=<arg>...] [options] [COMMAND] [ARGS...]\n\t命令选项：\t\t\n\t\t-f, --file FILE 指定使用的 Compose 模板文件，默认为 docker-compose.yml，可以多次指定。\n\t\t-p, --project-name NAME 指定项目名称，默认将使用所在目录名称作为项目名。\n            --x-networking 使用 Docker 的可拔插网络后端特性\n            --x-network-driver DRIVER 指定网络后端的驱动，默认为 bridge\n            --verbose 输出更多调试信息。\n            -v, --version 打印版本并退出。\n\t\tbuild的命令：\n\t\t\tdocker-compose build [options] [SERVICE...]\n\t\t\toption：\n\t\t\t\t--force-rm 删除构建过程中的临时容器。\n\t\t\t\t--no-cache 构建镜像过程中不使用 cache（这将加长构建过程）。\n\t\t\t\t--pull 始终尝试通过 pull 来获取更新版本的镜像。\n\t\t\tconfig:\n\t\t\t\t验证文件格式是否正确，若正确则显示配置，若错误则进行错误原因\n\t\t\tdown：此命令将会停止 up 命令所启动的容器，并移除网络\n\t\t\texec：进入指定的容器。\n\t\t\thelp：获得一个命令的帮助。\n\t\t\timages：列出 Compose 文件中包含的镜像。\n\t\t\tkill：格式为 docker-compose kill [options] [SERVICE...]。通过发送 SIGKILL 信号来强制停止服务容器。\n\t\t\trm:格式为 docker-compose rm [options] [SERVICE...]。\n\t\t\t删除所有（停止状态的）服务容器。推荐先执行 docker-compose stop 命令来停止容器。\n\t\t\t-f：强制直接删除\n\t\t\t-v:删除容器所挂载的数据卷\n\t\t\trun:docker-compose run [options] [-p PORT...] [-e KEY=VAL...] SERVICE [COMMAND] [ARGS...]。\n\t\t\t参数：\n\t\t\t\t-d 后台运行容器。\n\t\t\t\t--name NAME 为容器指定一个名字。\n\t\t\t\t--entrypoint CMD 覆盖默认的容器启动指令。\n\t\t\t\t-e KEY=VAL 设置环境变量值，可多次使用选项来设置多个环境变量。\n\t\t\t\t-u, --user="" 指定运行容器的用户名或者 uid。\n\t\t\t\t--no-deps 不自动启动关联的服务容器。\n\t\t\t\t--rm 运行命令后自动删除容器，d 模式下将忽略。\n\t\t\t\t-p, --publish=[] 映射容器端口到本地主机。\n\t\t\t\t--service-ports 配置服务端口并映射到本地主机。\n\t\t\t\t-T 不分配伪 tty，意味着依赖 tty 的指令将无法运行。\n\t\t\t\tstart,stop,top,pause,port 和docker中的使用的都一样\n')])])]),a("p",[a("code",[t._v("前台运行：docker-compose up")])]),t._v(" "),a("p",[a("code",[t._v("后台运行：docker-compose up -d")])]),t._v(" "),a("p",[a("code",[t._v("启动：docker-compose start")])]),t._v(" "),a("p",[a("code",[t._v("停止：docker-compose stop")])]),t._v(" "),a("p",[a("code",[t._v("停止并移除容器：docker-compose down")])]),t._v(" "),a("p",[a("strong",[t._v("开机自启：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("vim /etc/rc.d/rc.local 加入下面的代码\n\n/usr/local/bin/docker-compose -f /www/docker/trace_fecshop/docker-compose.yml up -d\n")])])]),a("h3",{attrs:{id:"docker-compose实战nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose实战nginx"}},[t._v("#")]),t._v(" Docker compose实战Nginx")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nginx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token datetime number"}},[t._v("81:80")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./conf/nginx.conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/nginx/nginx.conf\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./wwwroot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/share/nginx/wwwroot\n")])])]),a("p",[t._v("配置nginx的数据卷：")]),t._v(" "),a("p",[t._v("在dokcer文件下创建：nginx的目录下创建：nginx.conf文件：")]),t._v(" "),a("p",[t._v("在当前目录创建wwwroot目录")]),t._v(" "),a("p",[t._v("这里直接书写为\n/usr/local/dokcer/nginx/conf/nginx.conf\n/usr/local/dokcer/nginx/wwwroot")]),t._v(" "),a("p",[t._v("在nginx.conf目录配置nginx的虚拟主机：然后去配置nginx即可")]),t._v(" "),a("h3",{attrs:{id:"docker-compose实战tomcat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose实战tomcat"}},[t._v("#")]),t._v(" Docker compose实战tomcat:")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tomcat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 8080"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /usr/local/docker/tomcat/webapps/test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/local/tomcat/webapps/test\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("TZ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Asia/Shanghai\n")])])]),a("h3",{attrs:{id:"docker-compose-实战mysql5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-实战mysql5"}},[t._v("#")]),t._v(" Docker compose 实战mysql5：")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mysql")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5.7.22\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 3306"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3306")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("TZ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Asia/Shanghai\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("MYSQL_ROOT_PASSWORD")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("character"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("set"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server=utf8mb4\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("collation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server=utf8mb4_general_ci\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("explicit_defaults_for_timestamp=true\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("lower_case_table_names=1\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("max_allowed_packet=128M\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("sql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('mode="STRICT_TRANS_TABLES'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("NO_AUTO_CREATE_USER"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("NO_ENGINE_SUBSTITUTION"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("NO_ZERO_DATE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("NO_ZERO_IN_DATE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v('ERROR_FOR_DIVISION_BY_ZERO"\n        '),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/lib/mysql\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mysql-data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n")])])]),a("p",[t._v("就是为了简化docker的使用：")]),t._v(" "),a("p",[t._v("直接运行 docker-compose.yml中的就可以使用。运行即可以")]),t._v(" "),a("p",[a("code",[t._v("docker-compose up")])]),t._v(" "),a("h3",{attrs:{id:"docker-compose-实战oracle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-实战oracle"}},[t._v("#")]),t._v(" Docker compose 实战oracle")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("oracle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sid: xe")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# username: system")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# password: oracle")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sath89/oracle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("xe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("11g\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果docker容器由于一些问题挂掉的化，docker-composer会自动把容器给启动起来")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" oracle  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启动之后容器的名称")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /my"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("data/oracle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("11g/data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/u01/app/oracle\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 1521"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1521")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[a("code",[t._v("启动服务：docker-compose -f oracle.yml up -d")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("查看运行的组件：docker ps -a")])])])]),t._v(" "),a("h3",{attrs:{id:"docker-compose-实战rabbitmq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-实战rabbitmq"}},[t._v("#")]),t._v(" Docker compose 实战RabbitMQ")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rabbitmq")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rabbitmq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("management\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rabbitmq\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 5672"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5672")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 15672"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15672")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("TZ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Asia/Shanghai\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("RABBITMQ_DEFAULT_USER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rabbit\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("RABBITMQ_DEFAULT_PASS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/lib/rabbitmq\n")])])]),a("p",[t._v("centos用上面的会出现 "),a("code",[t._v("chown: changing ownership of '/var/lib/rabbitmq': Permission denied")])]),t._v(" "),a("p",[t._v("解决方案：https://jingyan.baidu.com/article/9c69d48f7821b853c9024ef8.html")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://imgtu.com/i/gzNflq",target:"_blank",rel:"noopener noreferrer"}},[a("img",{staticClass:"lazy",attrs:{alt:"gzNflq.png","data-src":"https://z3.ax1x.com/2021/05/25/gzNflq.png",loading:"lazy"}}),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("经过以上配置就可以进行访问。")]),t._v(" "),a("h3",{attrs:{id:"docker-compose-实战rocketmq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-实战rocketmq"}},[t._v("#")]),t._v(" Docker compose 实战RocketMq")]),t._v(" "),a("p",[a("strong",[t._v("docker-compose.yml")])]),t._v(" "),a("p",[t._v("注意：启动RocketMQ server + Broker+ Console至少需要2G内容。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('version: \'3.5\'\nservices:\n  rmqnamesrv:\n    image: foxiswho/rocketmq:server\n    container_name: rmqnamesrv\n    ports:\n      - 9876:9876\n    volumes:\n      - ./data/logs:/opt/logs\n      - ./data/store:/opt/store\n    networks:\n        rmq:\n          aliases:\n            - rmqnamesrv\n\n  rmqbroker:\n    image: foxiswho/rocketmq:broker\n    container_name: rmqbroker\n    ports:\n      - 10909:10909\n      - 10911:10911\n    volumes:\n      - ./data/logs:/opt/logs\n      - ./data/store:/opt/store\n      - ./data/brokerconf/broker.conf:/etc/rocketmq/broker.conf\n    environment:\n        NAMESRV_ADDR: "rmqnamesrv:9876"\n        JAVA_OPTS: " -Duser.home=/opt"\n        JAVA_OPT_EXT: "-server -Xms128m -Xmx128m -Xmn128m"\n    command: mqbroker -c /etc/rocketmq/broker.conf\n    depends_on:\n      - rmqnamesrv\n    networks:\n      rmq:\n        aliases:\n          - rmqbroker\n\n  rmqconsole:\n    image: styletang/rocketmq-console-ng\n    container_name: rmqconsole\n    ports:\n      - 8080:8080\n    environment:\n        JAVA_OPTS: "-Drocketmq.namesrv.addr=rmqnamesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false"\n    depends_on:\n      - rmqnamesrv\n    networks:\n      rmq:\n        aliases:\n          - rmqconsole\n\nnetworks:\n  rmq:\n    name: rmq\n    driver: bridge\n')])])]),a("p",[t._v("需要配置一下broker.conf 我们需要在./data/brokerconf/ 目录下创建一个名为broker.conf的配置文件。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the "License"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an "AS IS" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n\n\n# 所属集群名字\nbrokerClusterName=DefaultCluster\n\n# broker 名字，注意此处不同的配置文件填写的不一样，如果在 broker-a.properties 使用: broker-a,\n# 在 broker-b.properties 使用: broker-b\nbrokerName=broker-a\n\n# 0 表示 Master，> 0 表示 Slave\nbrokerId=0\n\n# nameServer地址，分号分割\n# namesrvAddr=rocketmq-nameserver1:9876;rocketmq-nameserver2:9876\n\n# 启动IP,如果 docker 报 com.alibaba.rocketmq.remoting.exception.RemotingConnectException: connect to <192.168.0.120:10909> failed\n# 解决方式1 加上一句 producer.setVipChannelEnabled(false);，解决方式2 brokerIP1 设置宿主机IP，不要使用docker 内部IP\n# brokerIP1=192.168.0.253\n\n# 在发送消息时，自动创建服务器不存在的topic，默认创建的队列数\ndefaultTopicQueueNums=4\n\n# 是否允许 Broker 自动创建 Topic，建议线下开启，线上关闭 ！！！这里仔细看是 false，false，false\nautoCreateTopicEnable=true\n\n# 是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭\nautoCreateSubscriptionGroup=true\n\n# Broker 对外服务的监听端口\nlistenPort=10911\n\n# 删除文件时间点，默认凌晨4点\ndeleteWhen=04\n\n# 文件保留时间，默认48小时\nfileReservedTime=120\n\n# commitLog 每个文件的大小默认1G\nmapedFileSizeCommitLog=1073741824\n\n# ConsumeQueue 每个文件默认存 30W 条，根据业务情况调整\nmapedFileSizeConsumeQueue=300000\n\n# destroyMapedFileIntervalForcibly=120000\n# redeleteHangedFileInterval=120000\n# 检测物理文件磁盘空间\ndiskMaxUsedSpaceRatio=88\n# 存储路径\n# storePathRootDir=/home/ztztdata/rocketmq-all-4.1.0-incubating/store\n# commitLog 存储路径\n# storePathCommitLog=/home/ztztdata/rocketmq-all-4.1.0-incubating/store/commitlog\n# 消费队列存储\n# storePathConsumeQueue=/home/ztztdata/rocketmq-all-4.1.0-incubating/store/consumequeue\n# 消息索引存储路径\n# storePathIndex=/home/ztztdata/rocketmq-all-4.1.0-incubating/store/index\n# checkpoint 文件存储路径\n# storeCheckpoint=/home/ztztdata/rocketmq-all-4.1.0-incubating/store/checkpoint\n# abort 文件存储路径\n# abortFile=/home/ztztdata/rocketmq-all-4.1.0-incubating/store/abort\n# 限制的消息大小\nmaxMessageSize=65536\n\n# flushCommitLogLeastPages=4\n# flushConsumeQueueLeastPages=2\n# flushCommitLogThoroughInterval=10000\n# flushConsumeQueueThoroughInterval=60000\n\n# Broker 的角色\n# - ASYNC_MASTER 异步复制Master\n# - SYNC_MASTER 同步双写Master\n# - SLAVE\nbrokerRole=ASYNC_MASTER\n\n# 刷盘方式\n# - ASYNC_FLUSH 异步刷盘\n# - SYNC_FLUSH 同步刷盘\nflushDiskType=ASYNC_FLUSH\n\n# 发消息线程池数量\n# sendMessageThreadPoolNums=128\n# 拉消息线程池数量\n# pullMessageThreadPoolNums=128\n')])])]),a("h3",{attrs:{id:"docker-compose实战redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose实战redis"}},[t._v("#")]),t._v(" Docker compose实战Redis:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("redis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("latest\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 6379"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" mynetwork\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./redis.conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/local/etc/redis/redis.conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("rw\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("rw\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      /bin/bash "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('c "redis'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('server /usr/local/etc/redis/redis.conf "\n'),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mynetwork")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("external")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),a("h3",{attrs:{id:"docker-compose实战redis集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose实战redis集群"}},[t._v("#")]),t._v(" Docker compose实战Redis集群:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("master")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("master\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 6379"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("slave1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("slave"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 6380"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("slaveof redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("master 6379\n\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("slave2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("slave"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 6381"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("slaveof redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("master 6379\n")])])]),a("p",[a("strong",[t._v("使用sentinel实现高可用：")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sentinel1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("sentinel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 26379"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26379")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("sentinel /usr/local/etc/redis/sentinel.conf\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#数据卷")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./sentinel1.conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/local/etc/redis/sentinel.conf\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sentinel2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("sentinel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 26380"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26379")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("sentinel /usr/local/etc/redis/sentinel.conf\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./sentinel2.conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/local/etc/redis/sentinel.conf\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sentinel3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("sentinel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 26381"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26379")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("sentinel /usr/local/etc/redis/sentinel.conf\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./sentinel3.conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/local/etc/redis/sentinel.conf\n")])])]),a("h5",{attrs:{id:"修改sentinel文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改sentinel文件"}},[t._v("#")]),t._v(" 修改Sentinel文件：")]),t._v(" "),a("p",[t._v("分别为 sentinel1.conf，sentinel2.conf，sentinel3.conf，配置文件内容相同\n配置内容如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("port 26379\ndir /tmp\n# 自定义集群名，其中 127.0.0.1 为 redis-master 的 ip，6379 为 redis-master 的端口，2 为最小投票数（因为有 3 台 Sentinel 所以可以设置成 2）\nsentinel monitor mymaster 192.168.147.132 6379 2\nsentinel down-after-milliseconds mymaster 30000\nsentinel parallel-syncs mymaster 1\nsentinel failover-timeout mymaster 180000\nsentinel deny-scripts-reconfig yes\n\n")])])]),a("h5",{attrs:{id:"启动集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动集群"}},[t._v("#")]),t._v(" 启动集群：")]),t._v(" "),a("p",[t._v("docker-compose up -d")]),t._v(" "),a("h5",{attrs:{id:"查看集群是否生效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看集群是否生效"}},[t._v("#")]),t._v(" 查看集群是否生效：")]),t._v(" "),a("blockquote",[a("p",[t._v("进入 Sentinel 容器，使用 Sentinel API 查看监控情况：\ndocker exec -it redis-sentinel-1 /bin/bash\nredis-cli -p 26379\nsentinel master mymaster\nsentinel slaves mymaster\n生效后即可：")])]),t._v(" "),a("h3",{attrs:{id:"docker-compose实战fastdfs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose实战fastdfs"}},[t._v("#")]),t._v(" Docker compose实战FastDFS")]),t._v(" "),a("p",[t._v("参考下的 SpringClouditoken 项目下的FastDFS一节：http://www.kaysanshi.top/learning-note/")]),t._v(" "),a("h3",{attrs:{id:"docker-compose实战dubbo-zookeeper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose实战dubbo-zookeeper"}},[t._v("#")]),t._v(" Docker compose实战Dubbo zookeeper")]),t._v(" "),a("p",[t._v("单节点：")]),t._v(" "),a("h6",{attrs:{id:"单机模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单机模式"}},[t._v("#")]),t._v(" 单机模式")]),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[a("strong",[t._v("新建zookeeper文件夹。在zookeeper文件夹中新建dokcer-compose.yml")])])],1),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("zoo1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" zookeeper\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" zookeeper\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2181")]),t._v("  \n")])])]),a("p",[t._v("进入容器。")]),t._v(" "),a("p",[a("code",[t._v("docker exec -it zookeeper_zool_1 /bin/bash")])]),t._v(" "),a("p",[t._v("检查是否安装成功：l")]),t._v(" "),a("p",[a("code",[t._v("./bin/zkServer.sh status")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://imgchr.com/i/DugkjI",target:"_blank",rel:"noopener noreferrer"}},[a("img",{staticClass:"lazy",attrs:{alt:"DugkjI.png","data-src":"https://s3.ax1x.com/2020/11/19/DugkjI.png",loading:"lazy"}}),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("进入bin目录后查看bin目录下的文件：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("root@zookeeper:/apache-zookeeper-3.6.2-bin"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls -l bin")]),t._v("\ntotal "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v("\n-rwxr-xr-x. "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" zookeeper zookeeper   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("232")]),t._v(" Sep  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":43 README.txt\n-rwxr-xr-x. "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" zookeeper zookeeper  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2066")]),t._v(" Sep  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":43 zkCleanup.sh\n-rwxr-xr-x. "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" zookeeper zookeeper  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1158")]),t._v(" Sep  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":43 zkCli.cmd\n-rwxr-xr-x. "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" zookeeper zookeeper  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1620")]),t._v(" Sep  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":43 zkCli.sh\n-rwxr-xr-x. "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" zookeeper zookeeper  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1843")]),t._v(" Sep  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":43 zkEnv.cmd\n-rwxr-xr-x. "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" zookeeper zookeeper  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3690")]),t._v(" Sep  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":43 zkEnv.sh\n-rwxr-xr-x. "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" zookeeper zookeeper  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4559")]),t._v(" Sep  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":43 zkServer-initialize.sh\n-rwxr-xr-x. "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" zookeeper zookeeper  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1286")]),t._v(" Sep  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":43 zkServer.cmd\n-rwxr-xr-x. "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" zookeeper zookeeper "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11116")]),t._v(" Sep  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":43 zkServer.sh\n-rwxr-xr-x. "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" zookeeper zookeeper   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("988")]),t._v(" Sep  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":43 zkSnapShotToolkit.cmd\n-rwxr-xr-x. "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" zookeeper zookeeper  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1377")]),t._v(" Sep  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":43 zkSnapShotToolkit.sh\n-rwxr-xr-x. "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" zookeeper zookeeper   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("996")]),t._v(" Sep  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":43 zkTxnLogToolkit.cmd\n-rwxr-xr-x. "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" zookeeper zookeeper  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1385")]),t._v(" Sep  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":43 zkTxnLogToolkit.sh\nroot@zookeeper:/apache-zookeeper-3.6.2-bin"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ")]),t._v("\n")])])]),a("p",[t._v("通过 "),a("code",[t._v("zkCli")]),t._v(" 来访问 Zookeeper 的控制台来进行管理。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("root@zookeeper:/apache-zookeeper-3.6.2-bin"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# zkCli.sh -server 127.0.0.1:2181")]),t._v("\nConnecting to "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:2181\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-11-20 02:26:42,393 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myid:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" - INFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("main:Environment@98"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" - Client environment:zookeeper.version"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.6")]),t._v(".2--803c7f1a12f85978cb049af5e4ef23bd8b688715, built on 09/04/2020 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":44 GMT\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-11-20 02:26:42,397 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myid:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" - INFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("main:Environment@98"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" - Client environment:host.name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("zookeeper\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-11-20 02:26:42,397 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myid:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" - INFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("main:Environment@98"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" - Client environment:java.version"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11.0")]),t._v(".9.1\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-11-20 02:26:42,398 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myid:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" - INFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("main:Environment@98"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" - Client environment:java.vendor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Oracle Corporation\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-11-20 02:26:42,398 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myid:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" - INFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("main:Environment@98"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" - Client environment:java.home"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/openjdk-11\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nWelcome to ZooKeeper"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-11-20 02:26:42,475 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myid:127.0.0.1:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" - INFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("main-SendThread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":ClientCnxn"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$SendThread")]),t._v("@1167"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" - Opening socket connection to server localhost/127.0.0.1:2181.\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-11-20 02:26:42,475 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myid:127.0.0.1:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" - INFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("main-SendThread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":ClientCnxn"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$SendThread")]),t._v("@1169"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" - SASL config status: Will not attempt to authenticate using SASL "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unknown error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nJLine support is enabled\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-11-20 02:26:42,491 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myid:127.0.0.1:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" - INFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("main-SendThread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":ClientCnxn"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$SendThread")]),t._v("@999"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" - Socket connection established, initiating session, client: /127.0.0.1:40896, server: localhost/127.0.0.1:2181\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-11-20 02:26:42,511 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myid:127.0.0.1:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" - INFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("main-SendThread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":ClientCnxn"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$SendThread")]),t._v("@1433"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" - Session establishment complete on server localhost/127.0.0.1:2181, session "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 0x10013cdbf990003, negotiated "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("timeout")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30000")]),t._v("\n\nWATCHER::\n\nWatchedEvent state:SyncConnected type:None path:null\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("zk: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CONNECTED"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" create /hello-zone "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world'")]),t._v("\nCreated /hello-zone\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("zk: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CONNECTED"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" /\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dubbo, hello-zone, zookeeper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("zk: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CONNECTED"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n\n\n")])])]),a("p",[t._v("去git 的dubbo 源码 ，然后打jar包，上传到服务器。")]),t._v(" "),a("p",[t._v("这个时候直接启动jar 就能访问到了。 "),a("code",[t._v("java -jar dubbo-admin-0.2.0-SNAPSHOT.jar")])]),t._v(" "),a("p",[t._v("注意这个地方我的那个application.properties并未改动。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("admin.registry.address=zookeeper://127.0.0.1:2181\nadmin.config-center=zookeeper://127.0.0.1:2181\nadmin.metadata-report.address=zookeeper://127.0.0.1:2181\n")])])]),a("p",[t._v("请看页面效果：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://imgchr.com/i/DMvbnI",target:"_blank",rel:"noopener noreferrer"}},[a("img",{staticClass:"lazy",attrs:{alt:"DMvbnI.png","data-src":"https://s3.ax1x.com/2020/11/20/DMvbnI.png",loading:"lazy"}}),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"docker-compose实战zookeeper集群-有问题-未解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose实战zookeeper集群-有问题-未解决"}},[t._v("#")]),t._v(" Docker compose实战zookeeper集群 （有问题 -未解决）")]),t._v(" "),a("p",[a("strong",[t._v("伪集群模式：")])]),t._v(" "),a("p",[t._v("在原来的使用是"),a("code",[t._v("server zool:3888")]),t._v(" 总是出现问题。新版本推荐使用以下")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("zoo1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" zookeeper\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" zoo1\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2181")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ZOO_MY_ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ZOO_SERVERS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" server.1=0.0.0.0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("2888"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3888 server.2=zoo2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("2888"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3888 server.3=zoo3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("2888"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3888")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("zoo2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" zookeeper\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" zoo2\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 2182"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2181")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ZOO_MY_ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ZOO_SERVERS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" server.1=zoo1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("2888"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3888 server.2=0.0.0.0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("2888"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3888 server.3=zoo3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("2888"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3888")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("zoo3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" zookeeper\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" zoo3\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 2183"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2181")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ZOO_MY_ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ZOO_SERVERS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" server.1=zoo1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("2888"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3888 server.2=zoo2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("2888"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3888 server.3=0.0.0.0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("2888"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3888")]),t._v("\n")])])]),a("ul",[a("li",[t._v("分别以交互方式进入容器查看")])]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker exec -it zookeeper_zoo1_1 /bin/bash\ndocker exec -it zookeeper_zoo1_2 /bin/bash\ndocker exec -it zookeeper_zoo1_3 /bin/bash\n")])])]),a("h3",{attrs:{id:"docker-compose实战-gitlab"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose实战-gitlab"}},[t._v("#")]),t._v(" Docker compose实战 gitlab")]),t._v(" "),a("p",[a("strong",[t._v("docker-compose.yml")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gitlab")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" twang2218/gitlab"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ce"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("zh\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'192.168.147.132'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("TZ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Asia/Shanghai'")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("GITLAB_OMNIBUS_CONFIG")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n        external_url 'http://192.168.147.132:8080'\n        gitlab_rails['gitlab_shell_ssh_port'] = 2222\n        unicorn['port'] = 8888\n        nginx['listen_port'] = 8080")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'8080:8080'")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'8443:443'")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2222:22'")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /usr/local/docker/gitlab/config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/gitlab\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /usr/local/docker/gitlab/data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/opt/gitlab\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /usr/local/docker/gitlab/logs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/log/gitlab\n")])])]),a("h3",{attrs:{id:"docker-compose实战-nexus"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose实战-nexus"}},[t._v("#")]),t._v(" Docker compose实战 nexus")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nexus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sonatype/nexus3\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nexus\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 8081"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /usr/local/docker/nexus/data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/nexus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("data\n")])])]),a("p",[t._v("通过：http://ip:port/用户名：密码：验证")]),t._v(" "),a("h3",{attrs:{id:"docker-compose-实战elasticsecarch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-实战elasticsecarch"}},[t._v("#")]),t._v(" Docker compose 实战ElasticSecarch")]),t._v(" "),a("p",[a("strong",[t._v("docker-compose.yml")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.3'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("elasticsearch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wutang/elasticsearch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("shanghai"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("zone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("6.3.2\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" elasticsearch\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 9200"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9200")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 9300"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9300")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cluster.name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" elasticsearch\n")])])]),a("p",[t._v("访问 ： http://elasticsearchIP:9200/  查看是否成功")]),t._v(" "),a("p",[t._v("但是这个版本的不支持kibana 重新配置一个：")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("elasticsearch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" elasticsearch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("6.8.15\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" elasticsearch\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cluster.name=elasticsearch"')]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置集群名称为elasticsearch")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"discovery.type=single-node"')]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以单一节点模式启动")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ES_JAVA_OPTS=-Xms4096m -Xmx4096m"')]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置使用jvm内存大小")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 需要赋予这些文件权限 ")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./data/elasticsearch/plugins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/share/elasticsearch/plugins "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#插件文件挂载")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./data/elasticsearch/data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/share/elasticsearch/data "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#数据文件挂载")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./data/elasticsearch/config/elasticsearch.yml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/share/elasticsearch/config/elasticsearch.yml "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置文件挂载")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 9200"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9200")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 9300"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9300")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kibana")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kibana"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("6.8.15\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kibana\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("depends_on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" elasticsearch "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#kibana在elasticsearch启动之后再启动")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"elasticsearch.hosts=http://127.0.0.1:9200"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置访问elasticsearch的地址")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# volumes: 配置数据卷有问题，这里就不配置了")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#- /data/kibana/config:/usr/share/kibana/config #配置文件挂载")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 5601"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5601")]),t._v("\n")])])]),a("p",[t._v("需要配置：")]),t._v(" "),a("p",[t._v("vim  ./data/elasticsearch/config/elasticsearch.yml")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('cluster.name: "elasticsearch"\n# 允许外部网络访问\nnetwork.host: 0.0.0.0\n#支持跨域\nhttp.cors.enabled: true\n#支持所有域名\nhttp.cors.allow-origin: "*"\n# 关闭xpack安全校验，在kibana中使用就不需要输入账号密码\nxpack.security.enabled: false\n')])])]),a("p",[t._v("启动会报错：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://imgtu.com/i/29FIUS",target:"_blank",rel:"noopener noreferrer"}},[a("img",{staticClass:"lazy",attrs:{alt:"29FIUS.png","data-src":"https://z3.ax1x.com/2021/05/26/29FIUS.png",loading:"lazy"}}),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("需要授予权限：chmod 777 ./data/elasticsearch/data   再次启动可以启动")]),t._v(" "),a("p",[t._v("cd  ./data/kibana/config")]),t._v(" "),a("p",[t._v("vim kibana.yml")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('server.name: kibana\nserver.host: "0"\nelasticsearch.hosts: [ "http://localhost:9200" ]\ni18n.locale: "zh-CN"\n')])])]),a("p",[a("em",[t._v("vim kibana.yml 后kibana的配置了数据卷，导致出现问题，所以上面的docker-compose文件去除 这个数据卷。")])]),t._v(" "),a("p",[t._v("安装ik分词器：下载zip包上传到：/data/elasticsearch/plugins 目录下 创建个名称为ik文件夹：\n将docker-compose.yml进行配置ik的插件：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  - ./data/elasticsearch/plugins/ik:/usr/share/elasticsearch/plugins/ik #插件文件挂载\n")])])]),a("p",[t._v("看下请求：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://imgtu.com/i/29j7Dg",target:"_blank",rel:"noopener noreferrer"}},[a("img",{staticClass:"lazy",attrs:{alt:"29j7Dg.png","data-src":"https://z3.ax1x.com/2021/05/26/29j7Dg.png",loading:"lazy"}}),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"docker-compose編排容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose編排容器"}},[t._v("#")]),t._v(" Docker compose編排容器")]),t._v(" "),a("p",[t._v("一般使用先进行安装环境然后通过docker-compose.yml进行编排启动各个服务。")]),t._v(" "),a("p",[t._v("比如我们有一个 spring cloud项目")]),t._v(" "),a("h2",{attrs:{id:"docker-registry"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-registry"}},[t._v("#")]),t._v(" Docker-Registry:")]),t._v(" "),a("h3",{attrs:{id:"docker-私服"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-私服"}},[t._v("#")]),t._v(" Docker 私服：")]),t._v(" "),a("p",[t._v("​\t\tcd  /usr/local/docker\n​\t\t创建 registry目录\n​\t\t使用docker compose命令直接使用：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("registry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" registry\n\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" registry\n\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 5000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /usr/local/docker/registry/data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/lib/registry\t\n")])])]),a("p",[t._v("只要安装之后就可以了，这里只是服务端，同样我们需要客户端测试：http://ip:5000/v2/\n我们在开发时构建服务端之后，在客户端构建一个服务之后上传到这个docker私服中有其他人使用的话直接在这个地方拉取：同时需要在客户端配置：/etc/docker/daemon.json   "),a("code",[t._v("daemon.json中配置：")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"registry-mirrors"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://registry.docker-cn.com"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"insecure-registries"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ip:5000"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\t\n")])])]),a("p",[t._v("之后重启就可以：")]),t._v(" "),a("p",[a("code",[t._v("sudo systemctl daemon-reload")])]),t._v(" "),a("p",[a("code",[t._v("sudo systemctl restart docker")])]),t._v(" "),a("h3",{attrs:{id:"测试镜像上传"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试镜像上传"}},[t._v("#")]),t._v(" 测试镜像上传：")]),t._v(" "),a("p",[t._v("​\t 拉取一个镜像\n​\t\t\t\tdocker pull nginx")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("## 查看全部镜像 docker images\n## 标记本地镜像并指向目标仓库（ip:port/image_name:tag，该格式为标记版本号）\n    docker tag nginx 192.168.75.133:5000/nginx\n## 提交镜像到仓库\n\tdocker push 192.168.75.133:5000/nginx\n查看全部镜像：\n\tcurl -XGET http://192.168.75.133:5000/v2/_catalog\n部署Docker Registry WebUI\n私服安装成功后就可以使用 docker 命令行工具对 registry 做各种操作了。然而不太方便的地方是不能直观的查看 registry 中的资源情况。如果可以使用 UI 工具管理镜像就更好了。这里介绍两个 Docker Registry WebUI 工具\n    docker-registry-frontend\n\tdocker-registry-web\t\t\n")])])]),a("h3",{attrs:{id:"在客户端中docker-compose中使用这个"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在客户端中docker-compose中使用这个"}},[t._v("#")]),t._v(" 在客户端中docker-compose中使用这个：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("frontend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" konradkleine/docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("frontend"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("v2\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 8080"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./certs/frontend.crt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/apache2/server.crt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("ro\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./certs/frontend.key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/apache2/server.key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("ro\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ENV_DOCKER_REGISTRY_HOST=192.168.75.133\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ENV_DOCKER_REGISTRY_PORT=5000\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);